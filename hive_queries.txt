{"emp_id":10101,"emp_name":"Ravi","gender":"Male","age":22,"dept_name":"Operations","salary":4500,"start_date":"2014-08-17"}
{"emp_id":10102,"emp_name":"Manish","gender":"Male","age":43,"dept_name":"Sales","salary":5500,"start_date":"2012-03-27"}
{"emp_id":10103,"emp_name":"Akash","gender":"Male","age":34,"dept_name":null,"salary":null,"start_date":"2014-06-11"}
{"emp_id":10104,"emp_name":"Suresh","gender":"Male","age":55,"dept_name":"Sales","salary":3400,"start_date":"2013-10-17"}
{"emp_id":10105,"emp_name":"Priya","gender":"Female","age":26,"dept_name":"Accounting","salary":2500,"start_date":"2012-12-02"}
{"emp_id":10106,"emp_name":"Vinay","gender":"Male","age":24,"dept_name":"Accounting","salary":3700,"start_date":"2013-05-23"}
{"emp_id":10107,"emp_name":"Diya","gender":"Female","age":48,"dept_name":"HR","salary":4300,"start_date":"2015-04-30"}
{"emp_id":10108,"emp_name":"Shreya","gender":"Female","age":32,"dept_name":"Operations","salary":6900,"start_date":"2012-04-06"}
{"emp_id":10109,"emp_name":"Anil","gender":"Male","age":26,"dept_name":"Sales","salary":4500,"start_date":"2014-03-19"}
{"emp_id":10110,"emp_name":"Raj","gender":"Male","age":41,"dept_name":"Operations","salary":3900,"start_date":"2012-09-14"}
{"emp_id":10111,"emp_name":"Kabir","gender":"Male","age":53,"dept_name":"Marketing","salary":null,"start_date":"2014-04-18"}
{"emp_id":10112,"emp_name":"Purab","gender":"Male","age":25,"dept_name":"Marketing","salary":2700,"start_date":"2014-01-26"}
{"emp_id":10113,"emp_name":"Drishti","gender":"Female","age":47,"dept_name":"Administration","salary":4500,"start_date":"2013-08-14"}
{"emp_id":10114,"emp_name":"Ishaan","gender":"Male","age":33,"dept_name":"Marketing","salary":5100,"start_date":"2012-04-01"}
{"emp_id":10115,"emp_name":"Veer","gender":"Male","age":29,"dept_name":"Sales","salary":4300,"start_date":"2013-10-31"}
{"emp_id":10116,"emp_name":"Kartik","gender":"Male","age":49,"dept_name":"Administration","salary":5500,"start_date":"2012-06-20"}
{"emp_id":10117,"emp_name":"Samar","gender":"Male","age":42,"dept_name":"Accounting","salary":3800,"start_date":"2014-09-17"}
{"emp_id":10119,"emp_name":"Rohan","gender":"Male","age":38,"dept_name":"Accounting","salary":null,"start_date":"2013-07-11"}
{"emp_id":10120,"emp_name":"Ishita","gender":"Female","age":25,"dept_name":"HR","salary":5700,"start_date":"2014-02-06"}
{"emp_id":10118,"emp_name":"Anushka","gender":"Female","age":46,"dept_name":"Operations","salary":3200,"start_date":"2012-11-10"}


CREATE TABLE employee_json (
  emp_id INT,
  emp_name STRING,
  gender STRING,
  age INT,
  dept_name STRING,
  salary INT
) ROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'
STORED AS textfile;


LOAD DATA LOCAL INPATH '/home/dipankarpal/employee_json' OVERWRITE TABLE employee_json;


SELECT * FROM employee_json;
-- +-----------------------+-------------------------+-----------------------+--------------------+--------------------------+-----------------------+---------------------------+--+
-- | employee_json.emp_id  | employee_json.emp_name  | employee_json.gender  | employee_json.age  | employee_json.dept_name  | employee_json.salary  | employee_json.start_date  |
-- +-----------------------+-------------------------+-----------------------+--------------------+--------------------------+-----------------------+---------------------------+--+
-- | 10101                 | Ravi                    | Male                  | 22                 | Operations               | 4500                  | 2014-08-17                |
-- | 10102                 | Manish                  | Male                  | 43                 | Sales                    | 5500                  | 2012-03-27                |
-- | 10103                 | Akash                   | Male                  | 34                 | NULL                     | NULL                  | 2014-06-11                |
-- | 10104                 | Suresh                  | Male                  | 55                 | Sales                    | 3400                  | 2013-10-17                |
-- | 10105                 | Priya                   | Female                | 26                 | Accounting               | 2500                  | 2012-12-02                |
-- | 10106                 | Vinay                   | Male                  | 24                 | Accounting               | 3700                  | 2013-05-23                |
-- | 10107                 | Diya                    | Female                | 48                 | HR                       | 4300                  | 2015-04-30                |
-- | 10108                 | Shreya                  | Female                | 32                 | Operations               | 6900                  | 2012-04-06                |
-- | 10109                 | Anil                    | Male                  | 26                 | Sales                    | 4500                  | 2014-03-19                |
-- | 10110                 | Raj                     | Male                  | 41                 | Operations               | 3900                  | 2012-09-14                |
-- | 10111                 | Kabir                   | Male                  | 53                 | Marketing                | NULL                  | 2014-04-18                |
-- | 10112                 | Purab                   | Male                  | 25                 | Marketing                | 2700                  | 2014-01-26                |
-- | 10113                 | Drishti                 | Female                | 47                 | Administration           | 4500                  | 2013-08-14                |
-- | 10114                 | Ishaan                  | Male                  | 33                 | Marketing                | 5100                  | 2012-04-01                |
-- | 10115                 | Veer                    | Male                  | 29                 | Sales                    | 4300                  | 2013-10-31                |
-- | 10116                 | Kartik                  | Male                  | 49                 | Administration           | 5500                  | 2012-06-20                |
-- | 10117                 | Samar                   | Male                  | 42                 | Accounting               | 3800                  | 2014-09-17                |
-- | 10119                 | Rohan                   | Male                  | 38                 | Accounting               | NULL                  | 2013-07-11                |
-- | 10120                 | Ishita                  | Female                | 25                 | HR                       | 5700                  | 2014-02-06                |
-- | 10118                 | Anushka                 | Female                | 46                 | Operations               | 3200                  | 2012-11-10                |
-- +-----------------------+-------------------------+-----------------------+--------------------+--------------------------+-----------------------+---------------------------+--+


SELECT COUNT(*) AS row_count_1, COUNT(1) AS row_count_2 FROM employee_json;
-- +--------------+--------------+--+
-- | row_count_1  | row_count_2  |
-- +--------------+--------------+--+
-- | 20           | 20           |
-- +--------------+--------------+--+


SELECT gender, COUNT(*) AS row_count FROM employee_json GROUP BY gender;
-- +---------+------------+--+
-- | gender  | row_count  |
-- +---------+------------+--+
-- | Female  | 6          |
-- | Male    | 14         |
-- +---------+------------+--+


SELECT gender, AVG(age) AS avg_age, COUNT(*) AS row_count FROM employee_json GROUP BY gender;
-- +---------+---------------------+------------+--+
-- | gender  |       avg_age       | row_count  |
-- +---------+---------------------+------------+--+
-- | Female  | 37.333333333333336  | 6          |
-- | Male    | 36.714285714285715  | 14         |
-- +---------+---------------------+------------+--+


SELECT SUM(CASE WHEN gender = "Female" THEN age ELSE 0 END) / COUNT(CASE WHEN gender = "Female" THEN 1 ELSE null END) AS avg_female_age FROM employee_json;
-- +---------------------+--+
-- |   avg_female_age    |
-- +---------------------+--+
-- | 37.333333333333336  |
-- +---------------------+--+


SELECT SUM(COALESCE(age, 0)) AS total_age, SUM(IF(gender = "Male", age, 0)) AS total_male_age FROM employee_json;
-- +------------+-----------------+--+
-- | total_age  | total_male_age  |
-- +------------+-----------------+--+
-- | 738        | 514             |
-- +------------+-----------------+--+


SELECT IF(salary = 4500, salary, 'others') AS salary_group, COUNT(1) FROM employee_json GROUP BY IF(salary = 4500, salary, 'others');
-- +---------------+------+--+
-- | salary_group  | _c1  |
-- +---------------+------+--+
-- | 4500          | 3    |
-- | others        | 17   |
-- +---------------+------+--+


SELECT AVG(COUNT(*)) FROM employee_json;
-- Error: Error while compiling statement: FAILED: SemanticException [Error 10128]: Line 1:11 Not yet supported place for UDAF 'COUNT' (state=42000,code=10128)  NESTED AGGREGATE FUNCTIONS ARE NOT ALLOWED


SELECT MAX(null) AS max_of_null, MIN(null) AS min_of_null, COUNT(null) AS count_of_null;
-- +--------------+--------------+----------------+--+
-- | max_of_null  | min_of_null  | count_of_null  |
-- +--------------+--------------+----------------+--+
-- | NULL         | NULL         | 0              |
-- +--------------+--------------+----------------+--+


SELECT SUM(null) AS sum_of_null, AVG(null) AS avg_of_null;
-- Error: Error while compiling statement: FAILED: UDFArgumentTypeException Only numeric or string type arguments are accepted but void is passed. (state=42000,code =40000)


CREATE TABLE tab(value1 INT, value2 INT);

INSERT INTO tab VALUES(1, 2), (null, 4), (1, 6);

SELECT * FROM tab;
-- +-------------+-------------+--+
-- | tab.value1  | tab.value2  |
-- +-------------+-------------+--+
-- | 1           | 2           |
-- | NULL        | 4           |
-- | 1           | 6           |
-- +-------------+-------------+--+

SELECT SUM(value1), SUM(value1 + value2) FROM tab;
-- +------+------+--+
-- | _c0  | _c1  |
-- +------+------+--+
-- | 2    | 10   |
-- +------+------+--+

SELECT SUM(COALESCE(value1, 0)), SUM(COALESCE(value1, 0) + value2) FROM tab;
+------+------+--+
| _c0  | _c1  |
+------+------+--+
| 2    | 14   |
+------+------+--+


SELECT COUNT(DISTINCT(gender)) AS unique_gender_count, COUNT(DISTINCT(dept_name)) AS unique_dept_name FROM employee_json;
-- +----------------------+-------------------+--+
-- | unique_gender_count  | unique_dept_name  |
-- +----------------------+-------------------+--+
-- | 2                    | 6                 |
-- +----------------------+-------------------+--+
-- This will trigger only ONE reducer during the whole processing


-- Using subquery to select unique value before aggregations
SELECT COUNT(unique_gender) AS unique_gender_count FROM ( SELECT DISTINCT gender AS unique_gender FROM employee_json ) t;
-- +----------------------+--+
-- | unique_gender_count  |
-- +----------------------+--+
-- | 2                    |
-- +----------------------+--+


SELECT gender, MAX(STRUCT(age, emp_name)) AS oldest_emp, MIN(STRUCT(age, emp_name)) AS youngest_emp FROM employee_json GROUP BY gender;
-- +---------+------------------------------+------------------------------+--+
-- | gender  |          oldest_emp          |         youngest_emp         |
-- +---------+------------------------------+------------------------------+--+
-- | Female  | {"col1":48,"col2":"Diya"}    | {"col1":25,"col2":"Ishita"}  |
-- | Male    | {"col1":55,"col2":"Suresh"}  | {"col1":22,"col2":"Ravi"}    |
-- +---------+------------------------------+------------------------------+--+


SELECT gender, MAX(STRUCT(age, emp_name)).col1 AS oldest_emp_age, MAX(STRUCT(age, emp_name)).col2 AS oldest_emp_name FROM employee_json GROUP BY gender;
-- +---------+-----------------+------------------+--+
-- | gender  | oldest_emp_age  | oldest_emp_name  |
-- +---------+-----------------+------------------+--+
-- | Female  | 48              | Diya             |
-- | Male    | 55              | Suresh           |
-- +---------+-----------------+------------------+--+



-- GROUPING SETS => advanced multiple GROUP BY operations
-- -------------

SELECT gender, salary, COUNT(*) FROM employee_json GROUP BY gender, salary GROUPING SETS((gender, salary));
-- +---------+---------+------+--+
-- | gender  | salary  | _c2  |
-- +---------+---------+------+--+
-- | Female  | 2500    | 1    |
-- | Female  | 3200    | 1    |
-- | Female  | 4300    | 1    |
-- | Female  | 4500    | 1    |
-- | Female  | 5700    | 1    |
-- | Female  | 6900    | 1    |
-- | Male    | NULL    | 3    |
-- | Male    | 2700    | 1    |
-- | Male    | 3400    | 1    |
-- | Male    | 3700    | 1    |
-- | Male    | 3800    | 1    |
-- | Male    | 3900    | 1    |
-- | Male    | 4300    | 1    |
-- | Male    | 4500    | 2    |
-- | Male    | 5100    | 1    |
-- | Male    | 5500    | 2    |
-- +---------+---------+------+--+

SELECT gender, salary, COUNT(*) FROM employee_json GROUP BY gender, salary GROUPING SETS(gender, salary);
-- +---------+---------+------+--+
-- | gender  | salary  | _c2  |
-- +---------+---------+------+--+
-- | NULL    | NULL    | 3    |
-- | NULL    | 2500    | 1    |
-- | NULL    | 2700    | 1    |
-- | NULL    | 3200    | 1    |
-- | NULL    | 3400    | 1    |
-- | NULL    | 3700    | 1    |
-- | NULL    | 3800    | 1    |
-- | NULL    | 3900    | 1    |
-- | NULL    | 4300    | 2    |
-- | NULL    | 4500    | 3    |
-- | NULL    | 5100    | 1    |
-- | NULL    | 5500    | 2    |
-- | NULL    | 5700    | 1    |
-- | NULL    | 6900    | 1    |
-- | Female  | NULL    | 6    |
-- | Male    | NULL    | 14   |
-- +---------+---------+------+--+

SELECT gender, COUNT(*) FROM employee_json GROUP BY gender;                   SELECT salary, COUNT(*) FROM employee_json GROUP BY salary;
-- +---------+------+--+                                                         +---------+------+--+
-- | gender  | _c1  |                                                            | salary  | _c1  |
-- +---------+------+--+                                                         +---------+------+--+
-- | Female  | 6    |                                                            | NULL    | 3    |
-- | Male    | 14   |                                                            | 2500    | 1    |
-- +---------+------+--+                                                         | 2700    | 1    |
--                                                                               | 3200    | 1    |
--                                                                               | 3400    | 1    |
--                                                                               | 3700    | 1    |
--                                                                               | 3800    | 1    |
--                                                                               | 3900    | 1    |
--                                                                               | 4300    | 2    |
--                                                                               | 4500    | 3    |
--                                                                               | 5100    | 1    |
--                                                                               | 5500    | 2    |
--                                                                               | 5700    | 1    |
--                                                                               | 6900    | 1    |
--                                                                               +---------+------+--+

SELECT null AS gender, salary, COUNT(*) FROM employee_json GROUP BY salary UNION ALL SELECT gender, null AS salary, COUNT(*) FROM employee_json GROUP BY gender;
-- +-------------+-------------+----------+--+
-- | _u1.gender  | _u1.salary  | _u1._c2  |
-- +-------------+-------------+----------+--+
-- | NULL        | NULL        | 3        |
-- | NULL        | 2500        | 1        |
-- | NULL        | 2700        | 1        |
-- | NULL        | 3200        | 1        |
-- | NULL        | 3400        | 1        |
-- | NULL        | 3700        | 1        |
-- | NULL        | 3800        | 1        |
-- | NULL        | 3900        | 1        |
-- | NULL        | 4300        | 2        |
-- | NULL        | 4500        | 3        |
-- | NULL        | 5100        | 1        |
-- | NULL        | 5500        | 2        |
-- | NULL        | 5700        | 1        |
-- | NULL        | 6900        | 1        |
-- | Female      | NULL        | 6        |
-- | Male        | NULL        | 14       |
-- +-------------+-------------+----------+--+


SELECT gender, salary, COUNT(*) FROM employee_json GROUP BY gender, salary GROUPING SETS((gender, salary), gender);
-- +---------+---------+------+--+
-- | gender  | salary  | _c2  |
-- +---------+---------+------+--+
-- | Female  | NULL    | 6    |
-- | Female  | 2500    | 1    |
-- | Female  | 3200    | 1    |
-- | Female  | 4300    | 1    |
-- | Female  | 4500    | 1    |
-- | Female  | 5700    | 1    |
-- | Female  | 6900    | 1    |
-- | Male    | NULL    | 3    |
-- | Male    | NULL    | 14   |
-- | Male    | 2700    | 1    |
-- | Male    | 3400    | 1    |
-- | Male    | 3700    | 1    |
-- | Male    | 3800    | 1    |
-- | Male    | 3900    | 1    |
-- | Male    | 4300    | 1    |
-- | Male    | 4500    | 2    |
-- | Male    | 5100    | 1    |
-- | Male    | 5500    | 2    |
-- +---------+---------+------+--+


-- A blank set () in the GROUPING SETS clause calculates the overall aggregation
SELECT gender, salary, COUNT(*) FROM employee_json GROUP BY gender, salary GROUPING SETS((gender, salary), gender, salary, ());
-- +---------+---------+------+--+
-- | gender  | salary  | _c2  |
-- +---------+---------+------+--+
-- | NULL    | NULL    | 3    |
-- | NULL    | NULL    | 20   |
-- | NULL    | 2500    | 1    |
-- | NULL    | 2700    | 1    |
-- | NULL    | 3200    | 1    |
-- | NULL    | 3400    | 1    |
-- | NULL    | 3700    | 1    |
-- | NULL    | 3800    | 1    |
-- | NULL    | 3900    | 1    |
-- | NULL    | 4300    | 2    |
-- | NULL    | 4500    | 3    |
-- | NULL    | 5100    | 1    |
-- | NULL    | 5500    | 2    |
-- | NULL    | 5700    | 1    |
-- | NULL    | 6900    | 1    |
-- | Female  | NULL    | 6    |
-- | Female  | 2500    | 1    |
-- | Female  | 3200    | 1    |
-- | Female  | 4300    | 1    |
-- | Female  | 4500    | 1    |
-- | Female  | 5700    | 1    |
-- | Female  | 6900    | 1    |
-- | Male    | NULL    | 3    |
-- | Male    | NULL    | 14   |
-- | Male    | 2700    | 1    |
-- | Male    | 3400    | 1    |
-- | Male    | 3700    | 1    |
-- | Male    | 3800    | 1    |
-- | Male    | 3900    | 1    |
-- | Male    | 4300    | 1    |
-- | Male    | 4500    | 2    |
-- | Male    | 5100    | 1    |
-- | Male    | 5500    | 2    |
-- +---------+---------+------+--+



0: jdbc:hive2://rm01.itversity.com:10000> SELECT gender, salary, COUNT(*), GROUPING__ID  FROM employee_json GROUP BY gender, salary WITH CUBE ORDER BY gender, salary;
-- +---------+---------+------+---------------+--+
-- | gender  | salary  | _c2  | grouping__id  |
-- +---------+---------+------+---------------+--+
-- | NULL    | NULL    | 3    | 2             |
-- | NULL    | NULL    | 20   | 3             |
-- | NULL    | 2500    | 1    | 2             |
-- | NULL    | 2700    | 1    | 2             |
-- | NULL    | 3200    | 1    | 2             |
-- | NULL    | 3400    | 1    | 2             |
-- | NULL    | 3700    | 1    | 2             |
-- | NULL    | 3800    | 1    | 2             |
-- | NULL    | 3900    | 1    | 2             |
-- | NULL    | 4300    | 2    | 2             |
-- | NULL    | 4500    | 3    | 2             |
-- | NULL    | 5100    | 1    | 2             |
-- | NULL    | 5500    | 2    | 2             |
-- | NULL    | 5700    | 1    | 2             |
-- | NULL    | 6900    | 1    | 2             |
-- | Female  | NULL    | 6    | 1             |
-- | Female  | 2500    | 1    | 0             |
-- | Female  | 3200    | 1    | 0             |
-- | Female  | 4300    | 1    | 0             |
-- | Female  | 4500    | 1    | 0             |
-- | Female  | 5700    | 1    | 0             |
-- | Female  | 6900    | 1    | 0             |
-- | Male    | NULL    | 3    | 0             |
-- | Male    | NULL    | 14   | 1             |
-- | Male    | 2700    | 1    | 0             |
-- | Male    | 3400    | 1    | 0             |
-- | Male    | 3700    | 1    | 0             |
-- | Male    | 3800    | 1    | 0             |
-- | Male    | 3900    | 1    | 0             |
-- | Male    | 4300    | 1    | 0             |
-- | Male    | 4500    | 2    | 0             |
-- | Male    | 5100    | 1    | 0             |
-- | Male    | 5500    | 2    | 0             |
-- +---------+---------+------+---------------+--+


SELECT salary, COUNT(*) FROM employee_json GROUP BY salary HAVING COUNT(*) = 1;
-- +---------+------+--+
-- | salary  | _c1  |
-- +---------+------+--+
-- | 2500    | 1    |
-- | 2700    | 1    |
-- | 3200    | 1    |
-- | 3400    | 1    |
-- | 3700    | 1    |
-- | 3800    | 1    |
-- | 3900    | 1    |
-- | 5100    | 1    |
-- | 5700    | 1    |
-- | 6900    | 1    |
-- +---------+------+--+


SELECT salary, COUNT(*) AS count_of_salary FROM employee_json GROUP BY salary HAVING count_of_salary > 2;
-- +---------+------------------+--+
-- | salary  | count_of_salary  |
-- +---------+------------------+--+
-- | NULL    | 3                |
-- | 4500    | 3                |
-- +---------+------------------+--+

-- equivalent to ^^^ without using HAVING clause; using subquery
SELECT t.salary, t.sal_count FROM ( SELECT salary, COUNT(*) AS sal_count FROM employee_json GROUP BY salary )t WHERE t.sal_count > 2;
-- +-----------+--------------+--+
-- | t.salary  | t.sal_count  |
-- +-----------+--------------+--+
-- | NULL      | 3            |
-- | 4500      | 3            |
-- +-----------+--------------+--+


SELECT emp_name, dept_name, salary, COUNT(emp_name) OVER(PARTITION BY dept_name) AS emp_per_dept FROM employee_json;
-- +-----------+-----------------+---------+---------------+--+
-- | emp_name  |    dept_name    | salary  | emp_per_dept  |
-- +-----------+-----------------+---------+---------------+--+
-- | Akash     | NULL            | NULL    | 1             |
-- | Rohan     | Accounting      | NULL    | 4             |
-- | Samar     | Accounting      | 3800    | 4             |
-- | Priya     | Accounting      | 2500    | 4             |
-- | Vinay     | Accounting      | 3700    | 4             |
-- | Drishti   | Administration  | 4500    | 2             |
-- | Kartik    | Administration  | 5500    | 2             |
-- | Diya      | HR              | 4300    | 2             |
-- | Ishita    | HR              | 5700    | 2             |
-- | Kabir     | Marketing       | NULL    | 3             |
-- | Ishaan    | Marketing       | 5100    | 3             |
-- | Purab     | Marketing       | 2700    | 3             |
-- | Ravi      | Operations      | 4500    | 4             |
-- | Shreya    | Operations      | 6900    | 4             |
-- | Raj       | Operations      | 3900    | 4             |
-- | Anushka   | Operations      | 3200    | 4             |
-- | Suresh    | Sales           | 3400    | 4             |
-- | Veer      | Sales           | 4300    | 4             |
-- | Manish    | Sales           | 5500    | 4             |
-- | Anil      | Sales           | 4500    | 4             |
-- +-----------+-----------------+---------+---------------+--+


SELECT emp_name, dept_name, salary, SUM(salary) OVER(ORDER BY emp_name) AS sum_of_salary FROM employee_json;
-- +-----------+-----------------+---------+----------------+--+
-- | emp_name  |    dept_name    | salary  | sum_of_salary  |
-- +-----------+-----------------+---------+----------------+--+
-- | Akash     | NULL            | NULL    | NULL           |
-- | Anil      | Sales           | 4500    | 4500           |
-- | Anushka   | Operations      | 3200    | 7700           |
-- | Diya      | HR              | 4300    | 12000          |
-- | Drishti   | Administration  | 4500    | 16500          |
-- | Ishaan    | Marketing       | 5100    | 21600          |
-- | Ishita    | HR              | 5700    | 27300          |
-- | Kabir     | Marketing       | NULL    | 27300          |
-- | Kartik    | Administration  | 5500    | 32800          |
-- | Manish    | Sales           | 5500    | 38300          |
-- | Priya     | Accounting      | 2500    | 40800          |
-- | Purab     | Marketing       | 2700    | 43500          |
-- | Raj       | Operations      | 3900    | 47400          |
-- | Ravi      | Operations      | 4500    | 51900          |
-- | Rohan     | Accounting      | NULL    | 51900          |
-- | Samar     | Accounting      | 3800    | 55700          |
-- | Shreya    | Operations      | 6900    | 62600          |
-- | Suresh    | Sales           | 3400    | 66000          |
-- | Veer      | Sales           | 4300    | 70300          |
-- | Vinay     | Accounting      | 3700    | 74000          |
-- +-----------+-----------------+---------+----------------+--+


SELECT emp_name, dept_name, salary, SUM(salary) OVER(ORDER BY dept_name) FROM employee_json;
-- +-----------+-----------------+---------+---------------+--+
-- | emp_name  |    dept_name    | salary  | sum_window_0  |
-- +-----------+-----------------+---------+---------------+--+
-- | Akash     | NULL            | NULL    | NULL          |
-- | Rohan     | Accounting      | NULL    | 10000         |
-- | Priya     | Accounting      | 2500    | 10000         |
-- | Vinay     | Accounting      | 3700    | 10000         |
-- | Samar     | Accounting      | 3800    | 10000         |
-- | Drishti   | Administration  | 4500    | 20000         |
-- | Kartik    | Administration  | 5500    | 20000         |
-- | Diya      | HR              | 4300    | 30000         |
-- | Ishita    | HR              | 5700    | 30000         |
-- | Ishaan    | Marketing       | 5100    | 37800         |
-- | Kabir     | Marketing       | NULL    | 37800         |
-- | Purab     | Marketing       | 2700    | 37800         |
-- | Ravi      | Operations      | 4500    | 56300         |
-- | Shreya    | Operations      | 6900    | 56300         |
-- | Raj       | Operations      | 3900    | 56300         |
-- | Anushka   | Operations      | 3200    | 56300         |
-- | Anil      | Sales           | 4500    | 74000         |
-- | Suresh    | Sales           | 3400    | 74000         |
-- | Manish    | Sales           | 5500    | 74000         |
-- | Veer      | Sales           | 4300    | 74000         |
-- +-----------+-----------------+---------+---------------+--+


SELECT emp_name, dept_name, salary, COUNT(emp_name) OVER(PARTITION BY dept_name ORDER BY emp_name) FROM employee_json;
-- +-----------+-----------------+---------+-----------------+--+
-- | emp_name  |    dept_name    | salary  | count_window_0  |
-- +-----------+-----------------+---------+-----------------+--+
-- | Akash     | NULL            | NULL    | 1               |
-- | Priya     | Accounting      | 2500    | 1               |
-- | Rohan     | Accounting      | NULL    | 2               |
-- | Samar     | Accounting      | 3800    | 3               |
-- | Vinay     | Accounting      | 3700    | 4               |
-- | Drishti   | Administration  | 4500    | 1               |
-- | Kartik    | Administration  | 5500    | 2               |
-- | Diya      | HR              | 4300    | 1               |
-- | Ishita    | HR              | 5700    | 2               |
-- | Ishaan    | Marketing       | 5100    | 1               |
-- | Kabir     | Marketing       | NULL    | 2               |
-- | Purab     | Marketing       | 2700    | 3               |
-- | Anushka   | Operations      | 3200    | 1               |
-- | Raj       | Operations      | 3900    | 2               |
-- | Ravi      | Operations      | 4500    | 3               |
-- | Shreya    | Operations      | 6900    | 4               |
-- | Anil      | Sales           | 4500    | 1               |
-- | Manish    | Sales           | 5500    | 2               |
-- | Suresh    | Sales           | 3400    | 3               |
-- | Veer      | Sales           | 4300    | 4               |
-- +-----------+-----------------+---------+-----------------+--+



SELECT emp_name, dept_name, salary, ROW_NUMBER() OVER() AS row_num, RANK() OVER (PARTITION BY dept_name ORDER BY salary) AS rank, DENSE_RANK() OVER(PARTITION BY dept_name ORDER BY salary) AS d_rank, PERCENT_RANK() OVER(PARTITION BY dept_name ORDER BY salary) AS p_rank, NTILE(4) OVER(PARTITION BY dept_name ORDER BY salary) AS ntile_1 FROM employee_json;
-- +-----------+-----------------+---------+----------+-------+---------+---------------------+----------+--+
-- | emp_name  |    dept_name    | salary  | row_num  | rank  | d_rank  |       p_rank        | ntile_1  |
-- +-----------+-----------------+---------+----------+-------+---------+---------------------+----------+--+
-- | Akash     | NULL            | NULL    | 3        | 1     | 1       | 0.0                 | 1        |
-- | Rohan     | Accounting      | NULL    | 18       | 1     | 1       | 0.0                 | 1        |
-- | Priya     | Accounting      | 2500    | 5        | 2     | 2       | 0.3333333333333333  | 2        |
-- | Vinay     | Accounting      | 3700    | 6        | 3     | 3       | 0.6666666666666666  | 3        |
-- | Samar     | Accounting      | 3800    | 17       | 4     | 4       | 1.0                 | 4        |
-- | Drishti   | Administration  | 4500    | 13       | 1     | 1       | 0.0                 | 1        |
-- | Kartik    | Administration  | 5500    | 16       | 2     | 2       | 1.0                 | 2        |
-- | Diya      | HR              | 4300    | 7        | 1     | 1       | 0.0                 | 1        |
-- | Ishita    | HR              | 5700    | 19       | 2     | 2       | 1.0                 | 2        |
-- | Kabir     | Marketing       | NULL    | 11       | 1     | 1       | 0.0                 | 1        |
-- | Purab     | Marketing       | 2700    | 12       | 2     | 2       | 0.5                 | 2        |
-- | Ishaan    | Marketing       | 5100    | 14       | 3     | 3       | 1.0                 | 3        |
-- | Anushka   | Operations      | 3200    | 20       | 1     | 1       | 0.0                 | 1        |
-- | Raj       | Operations      | 3900    | 10       | 2     | 2       | 0.3333333333333333  | 2        |
-- | Ravi      | Operations      | 4500    | 1        | 3     | 3       | 0.6666666666666666  | 3        |
-- | Shreya    | Operations      | 6900    | 8        | 4     | 4       | 1.0                 | 4        |
-- | Suresh    | Sales           | 3400    | 4        | 1     | 1       | 0.0                 | 1        |
-- | Veer      | Sales           | 4300    | 15       | 2     | 2       | 0.3333333333333333  | 2        |
-- | Anil      | Sales           | 4500    | 9        | 3     | 3       | 0.6666666666666666  | 3        |
-- | Manish    | Sales           | 5500    | 2        | 4     | 4       | 1.0                 | 4        |
-- +-----------+-----------------+---------+----------+-------+---------+---------------------+----------+--+


SELECT emp_name, dept_name, salary, ROW_NUMBER() OVER() FROM employee_json;
-- +-----------+-----------------+---------+----------------------+--+
-- | emp_name  |    dept_name    | salary  | row_number_window_0  |
-- +-----------+-----------------+---------+----------------------+--+
-- | Ravi      | Operations      | 4500    | 1                    |
-- | Manish    | Sales           | 5500    | 2                    |
-- | Akash     | NULL            | NULL    | 3                    |
-- | Suresh    | Sales           | 3400    | 4                    |
-- | Priya     | Accounting      | 2500    | 5                    |
-- | Vinay     | Accounting      | 3700    | 6                    |
-- | Diya      | HR              | 4300    | 7                    |
-- | Shreya    | Operations      | 6900    | 8                    |
-- | Anil      | Sales           | 4500    | 9                    |
-- | Raj       | Operations      | 3900    | 10                   |
-- | Kabir     | Marketing       | NULL    | 11                   |
-- | Purab     | Marketing       | 2700    | 12                   |
-- | Drishti   | Administration  | 4500    | 13                   |
-- | Ishaan    | Marketing       | 5100    | 14                   |
-- | Veer      | Sales           | 4300    | 15                   |
-- | Kartik    | Administration  | 5500    | 16                   |
-- | Samar     | Accounting      | 3800    | 17                   |
-- | Rohan     | Accounting      | NULL    | 18                   |
-- | Ishita    | HR              | 5700    | 19                   |
-- | Anushka   | Operations      | 3200    | 20                   |
-- +-----------+-----------------+---------+----------------------+--+


SELECT emp_name, dept_name, salary, ROW_NUMBER() OVER(ORDER BY emp_name) FROM employee_json;
-- +-----------+-----------------+---------+----------------------+--+
-- | emp_name  |    dept_name    | salary  | row_number_window_0  |
-- +-----------+-----------------+---------+----------------------+--+
-- | Akash     | NULL            | NULL    | 1                    |
-- | Anil      | Sales           | 4500    | 2                    |
-- | Anushka   | Operations      | 3200    | 3                    |
-- | Diya      | HR              | 4300    | 4                    |
-- | Drishti   | Administration  | 4500    | 5                    |
-- | Ishaan    | Marketing       | 5100    | 6                    |
-- | Ishita    | HR              | 5700    | 7                    |
-- | Kabir     | Marketing       | NULL    | 8                    |
-- | Kartik    | Administration  | 5500    | 9                    |
-- | Manish    | Sales           | 5500    | 10                   |
-- | Priya     | Accounting      | 2500    | 11                   |
-- | Purab     | Marketing       | 2700    | 12                   |
-- | Raj       | Operations      | 3900    | 13                   |
-- | Ravi      | Operations      | 4500    | 14                   |
-- | Rohan     | Accounting      | NULL    | 15                   |
-- | Samar     | Accounting      | 3800    | 16                   |
-- | Shreya    | Operations      | 6900    | 17                   |
-- | Suresh    | Sales           | 3400    | 18                   |
-- | Veer      | Sales           | 4300    | 19                   |
-- | Vinay     | Accounting      | 3700    | 20                   |
-- +-----------+-----------------+---------+----------------------+--+


SELECT emp_name, dept_name, salary, RANK() OVER(ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+----------------+--+
-- | emp_name  |    dept_name    | salary  | rank_window_0  |
-- +-----------+-----------------+---------+----------------+--+
-- | Kabir     | Marketing       | NULL    | 1              |
-- | Rohan     | Accounting      | NULL    | 1              |
-- | Akash     | NULL            | NULL    | 1              |
-- | Priya     | Accounting      | 2500    | 4              |
-- | Purab     | Marketing       | 2700    | 5              |
-- | Anushka   | Operations      | 3200    | 6              |
-- | Suresh    | Sales           | 3400    | 7              |
-- | Vinay     | Accounting      | 3700    | 8              |
-- | Samar     | Accounting      | 3800    | 9              |
-- | Raj       | Operations      | 3900    | 10             |
-- | Diya      | HR              | 4300    | 11             |
-- | Veer      | Sales           | 4300    | 11             |
-- | Ravi      | Operations      | 4500    | 13             |
-- | Anil      | Sales           | 4500    | 13             |
-- | Drishti   | Administration  | 4500    | 13             |
-- | Ishaan    | Marketing       | 5100    | 16             |
-- | Kartik    | Administration  | 5500    | 17             |
-- | Manish    | Sales           | 5500    | 17             |
-- | Ishita    | HR              | 5700    | 19             |
-- | Shreya    | Operations      | 6900    | 20             |
-- +-----------+-----------------+---------+----------------+--+


SELECT emp_name, dept_name, salary, DENSE_RANK() OVER(ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+----------------------+--+
-- | emp_name  |    dept_name    | salary  | dense_rank_window_0  |
-- +-----------+-----------------+---------+----------------------+--+
-- | Kabir     | Marketing       | NULL    | 1                    |
-- | Rohan     | Accounting      | NULL    | 1                    |
-- | Akash     | NULL            | NULL    | 1                    |
-- | Priya     | Accounting      | 2500    | 2                    |
-- | Purab     | Marketing       | 2700    | 3                    |
-- | Anushka   | Operations      | 3200    | 4                    |
-- | Suresh    | Sales           | 3400    | 5                    |
-- | Vinay     | Accounting      | 3700    | 6                    |
-- | Samar     | Accounting      | 3800    | 7                    |
-- | Raj       | Operations      | 3900    | 8                    |
-- | Diya      | HR              | 4300    | 9                    |
-- | Veer      | Sales           | 4300    | 9                    |
-- | Ravi      | Operations      | 4500    | 10                   |
-- | Anil      | Sales           | 4500    | 10                   |
-- | Drishti   | Administration  | 4500    | 10                   |
-- | Ishaan    | Marketing       | 5100    | 11                   |
-- | Kartik    | Administration  | 5500    | 12                   |
-- | Manish    | Sales           | 5500    | 12                   |
-- | Ishita    | HR              | 5700    | 13                   |
-- | Shreya    | Operations      | 6900    | 14                   |
-- +-----------+-----------------+---------+----------------------+--+


SELECT emp_name, dept_name, salary, PERCENT_RANK() OVER(ORDER BY salary) FROM employee_json;
--  PERCENT_RANK => (current rank - 1)/(total number of rows - 1)
+-----------+-----------------+---------+------------------------+--+
| emp_name  |    dept_name    | salary  | percent_rank_window_0  |
+-----------+-----------------+---------+------------------------+--+
| Kabir     | Marketing       | NULL    | 0.0                    |
| Rohan     | Accounting      | NULL    | 0.0                    |
| Akash     | NULL            | NULL    | 0.0                    |
| Priya     | Accounting      | 2500    | 0.15789473684210525    |
| Purab     | Marketing       | 2700    | 0.21052631578947367    |
| Anushka   | Operations      | 3200    | 0.2631578947368421     |
| Suresh    | Sales           | 3400    | 0.3157894736842105     |
| Vinay     | Accounting      | 3700    | 0.3684210526315789     |
| Samar     | Accounting      | 3800    | 0.42105263157894735    |
| Raj       | Operations      | 3900    | 0.47368421052631576    |
| Diya      | HR              | 4300    | 0.5263157894736842     |
| Veer      | Sales           | 4300    | 0.5263157894736842     |
| Ravi      | Operations      | 4500    | 0.631578947368421      |
| Anil      | Sales           | 4500    | 0.631578947368421      |
| Drishti   | Administration  | 4500    | 0.631578947368421      |
| Ishaan    | Marketing       | 5100    | 0.7894736842105263     |
| Kartik    | Administration  | 5500    | 0.8421052631578947     |
| Manish    | Sales           | 5500    | 0.8421052631578947     |
| Ishita    | HR              | 5700    | 0.9473684210526315     |
| Shreya    | Operations      | 6900    | 1.0                    |
+-----------+-----------------+---------+------------------------+--


SELECT emp_name, dept_name, salary, CUME_DIST() OVER(PARTITION BY dept_name ORDER BY salary) FROM employee_json;
-- CUME_DIST => (number of rows ≤ current row)/(total number of rows)
-- +-----------+-----------------+---------+---------------------+--+
-- | emp_name  |    dept_name    | salary  | cume_dist_window_0  |
-- +-----------+-----------------+---------+---------------------+--+
-- | Akash     | NULL            | NULL    | 1.0                 |
-- | Rohan     | Accounting      | NULL    | 0.25                |
-- | Priya     | Accounting      | 2500    | 0.5                 |
-- | Vinay     | Accounting      | 3700    | 0.75                |
-- | Samar     | Accounting      | 3800    | 1.0                 |
-- | Drishti   | Administration  | 4500    | 0.5                 |
-- | Kartik    | Administration  | 5500    | 1.0                 |
-- | Diya      | HR              | 4300    | 0.5                 |
-- | Ishita    | HR              | 5700    | 1.0                 |
-- | Kabir     | Marketing       | NULL    | 0.3333333333333333  |
-- | Purab     | Marketing       | 2700    | 0.6666666666666666  |
-- | Ishaan    | Marketing       | 5100    | 1.0                 |
-- | Anushka   | Operations      | 3200    | 0.25                |
-- | Raj       | Operations      | 3900    | 0.5                 |
-- | Ravi      | Operations      | 4500    | 0.75                |
-- | Shreya    | Operations      | 6900    | 1.0                 |
-- | Suresh    | Sales           | 3400    | 0.25                |
-- | Veer      | Sales           | 4300    | 0.5                 |
-- | Anil      | Sales           | 4500    | 0.75                |
-- | Manish    | Sales           | 5500    | 1.0                 |
-- +-----------+-----------------+---------+---------------------+--+


SELECT emp_name, dept_name, salary, LEAD(salary, 2) OVER(PARTITION BY dept_name ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+----------------+--+
-- | emp_name  |    dept_name    | salary  | lead_window_0  |
-- +-----------+-----------------+---------+----------------+--+
-- | Akash     | NULL            | NULL    | NULL           |
-- | Rohan     | Accounting      | NULL    | 3700           |
-- | Priya     | Accounting      | 2500    | 3800           |
-- | Vinay     | Accounting      | 3700    | NULL           |
-- | Samar     | Accounting      | 3800    | NULL           |
-- | Drishti   | Administration  | 4500    | NULL           |
-- | Kartik    | Administration  | 5500    | NULL           |
-- | Diya      | HR              | 4300    | NULL           |
-- | Ishita    | HR              | 5700    | NULL           |
-- | Kabir     | Marketing       | NULL    | 5100           |
-- | Purab     | Marketing       | 2700    | NULL           |
-- | Ishaan    | Marketing       | 5100    | NULL           |
-- | Anushka   | Operations      | 3200    | 4500           |
-- | Raj       | Operations      | 3900    | 6900           |
-- | Ravi      | Operations      | 4500    | NULL           |
-- | Shreya    | Operations      | 6900    | NULL           |
-- | Suresh    | Sales           | 3400    | 4500           |
-- | Veer      | Sales           | 4300    | 5500           |
-- | Anil      | Sales           | 4500    | NULL           |
-- | Manish    | Sales           | 5500    | NULL           |
-- +-----------+-----------------+---------+----------------+--+


SELECT emp_name, dept_name, salary, LEAD(salary, 2) OVER(ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+----------------+--+
-- | emp_name  |    dept_name    | salary  | lead_window_0  |
-- +-----------+-----------------+---------+----------------+--+
-- | Kabir     | Marketing       | NULL    | NULL           |
-- | Rohan     | Accounting      | NULL    | 2500           |
-- | Akash     | NULL            | NULL    | 2700           |
-- | Priya     | Accounting      | 2500    | 3200           |
-- | Purab     | Marketing       | 2700    | 3400           |
-- | Anushka   | Operations      | 3200    | 3700           |
-- | Suresh    | Sales           | 3400    | 3800           |
-- | Vinay     | Accounting      | 3700    | 3900           |
-- | Samar     | Accounting      | 3800    | 4300           |
-- | Raj       | Operations      | 3900    | 4300           |
-- | Diya      | HR              | 4300    | 4500           |
-- | Veer      | Sales           | 4300    | 4500           |
-- | Ravi      | Operations      | 4500    | 4500           |
-- | Anil      | Sales           | 4500    | 5100           |
-- | Drishti   | Administration  | 4500    | 5500           |
-- | Ishaan    | Marketing       | 5100    | 5500           |
-- | Kartik    | Administration  | 5500    | 5700           |
-- | Manish    | Sales           | 5500    | 6900           |
-- | Ishita    | HR              | 5700    | NULL           |
-- | Shreya    | Operations      | 6900    | NULL           |
-- +-----------+-----------------+---------+----------------+--+


SELECT emp_name, dept_name, salary, LAG(salary, 2) OVER(ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+---------------+--+
-- | emp_name  |    dept_name    | salary  | lag_window_0  |
-- +-----------+-----------------+---------+---------------+--+
-- | Kabir     | Marketing       | NULL    | NULL          |
-- | Rohan     | Accounting      | NULL    | NULL          |
-- | Akash     | NULL            | NULL    | NULL          |
-- | Priya     | Accounting      | 2500    | NULL          |
-- | Purab     | Marketing       | 2700    | NULL          |
-- | Anushka   | Operations      | 3200    | 2500          |
-- | Suresh    | Sales           | 3400    | 2700          |
-- | Vinay     | Accounting      | 3700    | 3200          |
-- | Samar     | Accounting      | 3800    | 3400          |
-- | Raj       | Operations      | 3900    | 3700          |
-- | Diya      | HR              | 4300    | 3800          |
-- | Veer      | Sales           | 4300    | 3900          |
-- | Ravi      | Operations      | 4500    | 4300          |
-- | Anil      | Sales           | 4500    | 4300          |
-- | Drishti   | Administration  | 4500    | 4500          |
-- | Ishaan    | Marketing       | 5100    | 4500          |
-- | Kartik    | Administration  | 5500    | 4500          |
-- | Manish    | Sales           | 5500    | 5100          |
-- | Ishita    | HR              | 5700    | 5500          |
-- | Shreya    | Operations      | 6900    | 5500          |
-- +-----------+-----------------+---------+---------------+--+


SELECT emp_name, dept_name, salary, LAG(salary, 2) OVER(PARTITION BY dept_name ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+---------------+--+
-- | emp_name  |    dept_name    | salary  | lag_window_0  |
-- +-----------+-----------------+---------+---------------+--+
-- | Akash     | NULL            | NULL    | NULL          |
-- | Rohan     | Accounting      | NULL    | NULL          |
-- | Priya     | Accounting      | 2500    | NULL          |
-- | Vinay     | Accounting      | 3700    | NULL          |
-- | Samar     | Accounting      | 3800    | 2500          |
-- | Drishti   | Administration  | 4500    | NULL          |
-- | Kartik    | Administration  | 5500    | NULL          |
-- | Diya      | HR              | 4300    | NULL          |
-- | Ishita    | HR              | 5700    | NULL          |
-- | Kabir     | Marketing       | NULL    | NULL          |
-- | Purab     | Marketing       | 2700    | NULL          |
-- | Ishaan    | Marketing       | 5100    | NULL          |
-- | Anushka   | Operations      | 3200    | NULL          |
-- | Raj       | Operations      | 3900    | NULL          |
-- | Ravi      | Operations      | 4500    | 3200          |
-- | Shreya    | Operations      | 6900    | 3900          |
-- | Suresh    | Sales           | 3400    | NULL          |
-- | Veer      | Sales           | 4300    | NULL          |
-- | Anil      | Sales           | 4500    | 3400          |
-- | Manish    | Sales           | 5500    | 4300          |
-- +-----------+-----------------+---------+---------------+--+


SELECT emp_name, dept_name, salary, LAG(salary, 2, 0) OVER(PARTITION BY dept_name ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+---------------+--+
-- | emp_name  |    dept_name    | salary  | lag_window_0  |
-- +-----------+-----------------+---------+---------------+--+
-- | Akash     | NULL            | NULL    | 0             |
-- | Rohan     | Accounting      | NULL    | 0             |
-- | Priya     | Accounting      | 2500    | 0             |
-- | Vinay     | Accounting      | 3700    | NULL          |
-- | Samar     | Accounting      | 3800    | 2500          |
-- | Drishti   | Administration  | 4500    | 0             |
-- | Kartik    | Administration  | 5500    | 0             |
-- | Diya      | HR              | 4300    | 0             |
-- | Ishita    | HR              | 5700    | 0             |
-- | Kabir     | Marketing       | NULL    | 0             |
-- | Purab     | Marketing       | 2700    | 0             |
-- | Ishaan    | Marketing       | 5100    | NULL          |
-- | Anushka   | Operations      | 3200    | 0             |
-- | Raj       | Operations      | 3900    | 0             |
-- | Ravi      | Operations      | 4500    | 3200          |
-- | Shreya    | Operations      | 6900    | 3900          |
-- | Suresh    | Sales           | 3400    | 0             |
-- | Veer      | Sales           | 4300    | 0             |
-- | Anil      | Sales           | 4500    | 3400          |
-- | Manish    | Sales           | 5500    | 4300          |
-- +-----------+-----------------+---------+---------------+--+


SELECT emp_name, dept_name, salary, LEAD(salary, 2, 0) OVER(PARTITION BY dept_name ORDER BY salary) FROM employee_json;
+-----------+-----------------+---------+----------------+--+
| emp_name  |    dept_name    | salary  | lead_window_0  |
+-----------+-----------------+---------+----------------+--+
| Akash     | NULL            | NULL    | 0              |
| Rohan     | Accounting      | NULL    | 3700           |
| Priya     | Accounting      | 2500    | 3800           |
| Vinay     | Accounting      | 3700    | 0              |
| Samar     | Accounting      | 3800    | 0              |
| Drishti   | Administration  | 4500    | 0              |
| Kartik    | Administration  | 5500    | 0              |
| Diya      | HR              | 4300    | 0              |
| Ishita    | HR              | 5700    | 0              |
| Kabir     | Marketing       | NULL    | 5100           |
| Purab     | Marketing       | 2700    | 0              |
| Ishaan    | Marketing       | 5100    | 0              |
| Anushka   | Operations      | 3200    | 4500           |
| Raj       | Operations      | 3900    | 6900           |
| Ravi      | Operations      | 4500    | 0              |
| Shreya    | Operations      | 6900    | 0              |
| Suresh    | Sales           | 3400    | 4500           |
| Veer      | Sales           | 4300    | 5500           |
| Anil      | Sales           | 4500    | 0              |
| Manish    | Sales           | 5500    | 0              |
+-----------+-----------------+---------+----------------+--+


SELECT emp_name, dept_name, salary, FIRST_VALUE(salary) OVER(PARTITION BY dept_name ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+-----------------------+--+
-- | emp_name  |    dept_name    | salary  | first_value_window_0  |
-- +-----------+-----------------+---------+-----------------------+--+
-- | Akash     | NULL            | NULL    | NULL                  |
-- | Rohan     | Accounting      | NULL    | NULL                  |
-- | Priya     | Accounting      | 2500    | NULL                  |
-- | Vinay     | Accounting      | 3700    | NULL                  |
-- | Samar     | Accounting      | 3800    | NULL                  |
-- | Drishti   | Administration  | 4500    | 4500                  |
-- | Kartik    | Administration  | 5500    | 4500                  |
-- | Diya      | HR              | 4300    | 4300                  |
-- | Ishita    | HR              | 5700    | 4300                  |
-- | Kabir     | Marketing       | NULL    | NULL                  |
-- | Purab     | Marketing       | 2700    | NULL                  |
-- | Ishaan    | Marketing       | 5100    | NULL                  |
-- | Anushka   | Operations      | 3200    | 3200                  |
-- | Raj       | Operations      | 3900    | 3200                  |
-- | Ravi      | Operations      | 4500    | 3200                  |
-- | Shreya    | Operations      | 6900    | 3200                  |
-- | Suresh    | Sales           | 3400    | 3400                  |
-- | Veer      | Sales           | 4300    | 3400                  |
-- | Anil      | Sales           | 4500    | 3400                  |
-- | Manish    | Sales           | 5500    | 3400                  |
-- +-----------+-----------------+---------+-----------------------+--+


SELECT emp_name, dept_name, salary, LAST_VALUE(salary) OVER(PARTITION BY dept_name ORDER BY salary) FROM employee_json;
-- +-----------+-----------------+---------+----------------------+--+
-- | emp_name  |    dept_name    | salary  | last_value_window_0  |
-- +-----------+-----------------+---------+----------------------+--+
-- | Akash     | NULL            | NULL    | NULL                 |
-- | Rohan     | Accounting      | NULL    | NULL                 |
-- | Priya     | Accounting      | 2500    | 2500                 |
-- | Vinay     | Accounting      | 3700    | 3700                 |
-- | Samar     | Accounting      | 3800    | 3800                 |
-- | Drishti   | Administration  | 4500    | 4500                 |
-- | Kartik    | Administration  | 5500    | 5500                 |
-- | Diya      | HR              | 4300    | 4300                 |
-- | Ishita    | HR              | 5700    | 5700                 |
-- | Kabir     | Marketing       | NULL    | NULL                 |
-- | Purab     | Marketing       | 2700    | 2700                 |
-- | Ishaan    | Marketing       | 5100    | 5100                 |
-- | Anushka   | Operations      | 3200    | 3200                 |
-- | Raj       | Operations      | 3900    | 3900                 |
-- | Ravi      | Operations      | 4500    | 4500                 |
-- | Shreya    | Operations      | 6900    | 6900                 |
-- | Suresh    | Sales           | 3400    | 3400                 |
-- | Veer      | Sales           | 4300    | 4300                 |
-- | Anil      | Sales           | 4500    | 4500                 |
-- | Manish    | Sales           | 5500    | 5500                 |
-- +-----------+-----------------+---------+----------------------+--+


SELECT emp_name, dept_name, salary, LAST_VALUE(salary) OVER(PARTITION BY dept_name ORDER BY salary RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM employee_json;
-- +-----------+-----------------+---------+----------------------+--+
-- | emp_name  |    dept_name    | salary  | last_value_window_0  |
-- +-----------+-----------------+---------+----------------------+--+
-- | Akash     | NULL            | NULL    | NULL                 |
-- | Rohan     | Accounting      | NULL    | 3800                 |
-- | Priya     | Accounting      | 2500    | 3800                 |
-- | Vinay     | Accounting      | 3700    | 3800                 |
-- | Samar     | Accounting      | 3800    | 3800                 |
-- | Drishti   | Administration  | 4500    | 5500                 |
-- | Kartik    | Administration  | 5500    | 5500                 |
-- | Diya      | HR              | 4300    | 5700                 |
-- | Ishita    | HR              | 5700    | 5700                 |
-- | Kabir     | Marketing       | NULL    | 5100                 |
-- | Purab     | Marketing       | 2700    | 5100                 |
-- | Ishaan    | Marketing       | 5100    | 5100                 |
-- | Anushka   | Operations      | 3200    | 6900                 |
-- | Raj       | Operations      | 3900    | 6900                 |
-- | Ravi      | Operations      | 4500    | 6900                 |
-- | Shreya    | Operations      | 6900    | 6900                 |
-- | Suresh    | Sales           | 3400    | 5500                 |
-- | Veer      | Sales           | 4300    | 5500                 |
-- | Anil      | Sales           | 4500    | 5500                 |
-- | Manish    | Sales           | 5500    | 5500                 |
-- +-----------+-----------------+---------+----------------------+--+


SELECT COLLECT_LIST(gender), COLLECT_SET(gender) FROM employee_json;
-- +------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--+
-- |                                                                            _c0                                                                             |        _c1         |
-- +------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--+
-- | ["Male","Male","Male","Male","Female","Male","Female","Female","Male","Male","Male","Male","Female","Male","Male","Male","Male","Male","Female","Female"]  | ["Male","Female"]  |
-- +------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--+


SELECT SIZE(null), SIZE(ARRAY(null)), SIZE(array());
-- +------+------+------+--+
-- | _c0  | _c1  | _c2  |
-- +------+------+------+--+
-- | -1   | 1    | 0    |
-- +------+------+------+--+


SELECT ARRAY_CONTAINS(ARRAY(1, 2, 3, 4), 3);
-- +-------+--+
-- |  _c0  |
-- +-------+--+
-- | true  |
-- +-------+--+

SELECT ARRAY_CONTAINS(ARRAY("DIYA", "JUHI", "ASHOK", "MITHUN"), "ASHOK");
-- +-------+--+
-- |  _c0  |
-- +-------+--+
-- | true  |
-- +-------+--+


SELECT SORT_ARRAY(ARRAY(4, 8, 2, 4, 5, 6));
-- +----------------+--+
-- |      _c0       |
-- +----------------+--+
-- | [2,4,4,5,6,8]  |
-- +----------------+--+

SELECT SORT_ARRAY(ARRAY("DIYA", "JUHI", "ASHOK", "MITHUN"));
-- +-----------------------------------+--+
-- |                _c0                |
-- +-----------------------------------+--+
-- | ["ASHOK","DIYA","JUHI","MITHUN"]  |
-- +-----------------------------------+--+


-- Data-Hashing Function
-- ---------------------

SELECT emp_name, md5(emp_name) FROM employee_json;  -- 128 bit
-- +-----------+-----------------------------------+--+
-- | emp_name  |                _c1                |
-- +-----------+-----------------------------------+--+
-- | Ravi      | a3de90c0d6a5ec7dd82a779958d76a1c  |
-- | Manish    | c6cbb5c7a518d7e4152f77e90227a83f  |
-- | Akash     | 9e24ff27867e729a42986a3358234332  |
-- | Suresh    | bac015e70aa82a58423deae70f973c27  |
-- | Priya     | 71e91cbc7d97758b5f61926e4e682c12  |
-- | Vinay     | bdff898770186da749cb63755cb1db09  |
-- | Diya      | 98e0c7edbf3853a9b77269e02182f0df  |
-- | Shreya    | 68da0d135cc3549f278557c77ed44f2b  |
-- | Anil      | 91ad7fafe8e9fff76c5e4ed3279c205d  |
-- | Raj       | e5742872ff127331b384ddfa6cd30b50  |
-- | Kabir     | f2189be4343e040b135ae255bc7c1157  |
-- | Purab     | 29fb81c8824d27bd992c46fbfe7bb7ad  |
-- | Drishti   | a8adeaa04aabb26be9b7c13fc290273a  |
-- | Ishaan    | 3f05e83bc9bb64b93e832e7233a231ec  |
-- | Veer      | d3251d15b5aee80b504ac57e48a64685  |
-- | Kartik    | a6b7ab8c1444c005d90818c6f75f4d92  |
-- | Samar     | dc9a3f41b0b41c8245fd4dd73f1d6242  |
-- | Rohan     | 02df8936eee3d4d2568857ed530671b2  |
-- | Ishita    | 3d4b5059b3f026a0add1adc161bc844e  |
-- | Anushka   | bbad6d2ddcd53b6f8e27472b8793bce9  |
-- +-----------+-----------------------------------+--+

SELECT emp_name, sha1(emp_name) FROM employee_json;  -- 160 bit
-- +-----------+-------------------------------------------+--+
-- | emp_name  |                    _c1                    |
-- +-----------+-------------------------------------------+--+
-- | Ravi      | f94baff7955dc839e2b8a9fe1e58a9460261e1a7  |
-- | Manish    | ef1501dd28339c199f05ad1ba0cf019ae7f69a56  |
-- | Akash     | f4fb94323a5381ae97e6a6428d0bbb1f2357bb34  |
-- | Suresh    | 1a80f51a59059d630993acf78cbe07acf92e6d6c  |
-- | Priya     | 7c34c0e6da69c17c5ca341705a7175bab81a2dab  |
-- | Vinay     | f466a96f5dabb739ec8e28029ea59a9ed9b5915a  |
-- | Diya      | c033f222652b8fa0cb39dfd93ac42e41243a493f  |
-- | Shreya    | 7b532021702d082f8bf6bef641146a4343d5410d  |
-- | Anil      | 7241d25a0e1d08b283325ebd00856d8f3971dbb5  |
-- | Raj       | 0623eb817f35a3bd72f4d19be22d7a43b18bbe76  |
-- | Kabir     | 0adae93d34a969cb181a6d355a0a9aba7fa084d6  |
-- | Purab     | 652b9ff04fdb22d5bbe81b60cd6f65a837995163  |
-- | Drishti   | 41246c9668bc01e3e601ee4dd3b938d31dc82e3f  |
-- | Ishaan    | 95320ea4852e3d2cc0158895c5597c712f7aa386  |
-- | Veer      | 70a2bd0420b38f10520d8c2b84738e4ea7a2a6fb  |
-- | Kartik    | fbd2bdb35f62ec08f0e7051535b1aee8d906b701  |
-- | Samar     | 42b34e77399d08117c033810a20dd6913fedd319  |
-- | Rohan     | 07fecf9bad3f0c126933698c647ace85b646894b  |
-- | Ishita    | 0289c2bec25cd24babcb51535b5c1443cccf158f  |
-- | Anushka   | 43a357a06806fc53cbc69230874dfec0d3619919  |
-- +-----------+-------------------------------------------+--+

SELECT emp_name, sha2(emp_name, 256) FROM employee_json; -- 256 bit
-- +-----------+-------------------------------------------------------------------+--+
-- | emp_name  |                                _c1                                |
-- +-----------+-------------------------------------------------------------------+--+
-- | Ravi      | c3d486efe1fcc7244982147d2c1827ef198a6f9257530fe247f1d6071446183f  |
-- | Manish    | ce50533891929ee117fbb3576091f31a47978e9e5a80bde5aac3baf6e83d2681  |
-- | Akash     | 89eccb0940a76c11197cdf2341ec57c0053637e9b882d64a5753d9a2c79131f3  |
-- | Suresh    | f73ad70629191b0dee16edd049ee0f21516bff0ec94a18df090200fb6673d124  |
-- | Priya     | 46c052732c8b9faad79d15e58075bf88ec4b42487088432f315ff5e941b4d064  |
-- | Vinay     | 87096f578286aa29afc506f59e53507b04deba7316afc8b3b6e46237061f4a29  |
-- | Diya      | 0c8b5f6b61dec95f617ba4630f916049094e020929873e03d97a2e6570344e25  |
-- | Shreya    | d5d9dc386fe4dd2dae4cca1edf2d599782d035d6cdba4ab2ddf615acb3853e30  |
-- | Anil      | e46a41ba8b3bb177b14bef3d7a92d61f10920fd4dce194998a819e6951e8d41a  |
-- | Raj       | 4f69905a2fdf3232f20e16f046e3c64563dc6dee02a6659c9d67ba0d2845c6a8  |
-- | Kabir     | d9ca75cb451d5d300090d9338a61671d4c2da514df3d3b2367280d745d5e4ad0  |
-- | Purab     | 87cdbad8cc06aed7bd45a20554d75333e80f2d559598c44ae919ff96927dfe04  |
-- | Drishti   | 1fa75f53ed35df6f7b04c7a3281662b1e229de6408df4f2395d7d9147801c3c7  |
-- | Ishaan    | 30dd313008c8b229b1111f711865ad22dfebbde9da3a9be19704170efa625e83  |
-- | Veer      | 4021d50428b61186c91bfe595f6b196c1f43c0d3ff43796908d5d4cf3d189a26  |
-- | Kartik    | be0bf5da502a8541a79ff9b48e963e3fa69b9d1e7f156ab3a5e75f71398055a9  |
-- | Samar     | 657d762e7248213ec28173bd089b325536cd223e0e3766ab0cd097e97b123005  |
-- | Rohan     | 723babacc99cf1f4543dc295a6d818f0cffbb2cb3ba6fd4a60080f7eb72c9d28  |
-- | Ishita    | eaa6899af61b91ed77d17c0d864af007e5fd01b8393fd7bebf088f86d1ccc6d6  |
-- | Anushka   | 06a8eab05c2bcbf188da73e7d2b9bcd4e698924652309dfd4ce3c60f132c8ff3  |
-- +-----------+-------------------------------------------------------------------+--+


SELECT MASK("ABCD-1258-drtu-R4b8", "F", "v", "*"); -- big letter to F, small letter to v, number to *
-- +----------------------+--+
-- |         _c0          |
-- +----------------------+--+
-- | FFFF-****-vvvv-F*v*  |
-- +----------------------+--+

SELECT MASK_LAST_N("ABCD-1258-drtu-R4b8", 4);
-- +----------------------+--+
-- |         _c0          |
-- +----------------------+--+
-- | ABCD-1258-drtu-Xnxn  |
-- +----------------------+--+

SELECT MASK_FIRST_N("ABCD-1258-drtu-R4b8", 4);
-- +----------------------+--+
-- |         _c0          |
-- +----------------------+--+
-- | XXXX-1258-drtu-R4b8  |
-- +----------------------+--+

SELECT MASK_SHOW_FIRST_N("ABCD-1258-drtu-R4b8", 4);
-- +----------------------+--+
-- |         _c0          |
-- +----------------------+--+
-- | ABCD-nnnn-xxxx-Xnxn  |
-- +----------------------+--+

SELECT MASK_SHOW_LAST_N("ABCD-1258-drtu-R4b8", 4);
-- +----------------------+--+
-- |         _c0          |
-- +----------------------+--+
-- | XXXX-nnnn-xxxx-R4b8  |
-- +----------------------+--+

SELECT MASK_HASH("ABCD-1258-drtu-R4b8");
-- +-----------------------------------+--+
-- |                _c0                |
-- +-----------------------------------+--+
-- | 120503da3df0b03c2e3fb7a64ef53c72  |
-- +-----------------------------------+--+


SELECT emp_name, AES_ENCRYPT(emp_name, '1234567890000000') AS encrypted_name, AES_DECRYPT(AES_ENCRYPT(emp_name, '1234567890000000'), '1234567890000000') AS decrypted_name FROM employee_json;
-- 1st argument is the value to encryped/decryped and 2nd argument is 128 bit (16 Byte) keys
+-----------+-------------------+-----------------+--+
| emp_name  |  encrypted_name   | decrypted_name  |
+-----------+-------------------+-----------------+--+
| Ravi      | �ip��O�T��)\X��?  | Ravi            |
| Manish    | "ȏ88��.�l�     | Manish          |
| Akash     | X\�Xx��ز&����@   | Akash           |
| Suresh    | b��G�
                   /^H7�؎�   | Suresh          |
| Priya     | ��xF
��Ѹ;���      | Priya           |
| Vinay     | W���M�>C��<"��   | Vinay           |
| Diya      | ���x#�����f�+��^  | Diya            |
| Shreya    | +o'��_g�<2�ޒ�   | Shreya          |
| Anil      | %��8�c����<N�   | Anil            |
| Raj       | :�o�
                  �o�Q�����  | Raj             |
| Kabir     | �/wY{�]�����      ��   | Kabir           |
| Purab     | �iC��3���cnз~��   | Purab           |
| Drishti   | ��-�����  ܒ��    | Drishti         |
| Ishaan    | &T�����ז��]W�   | Ishaan          |
| Veer      | Z��
                 �}��Y��|]QB  | Veer            |
| Kartik    | G��w-�
                    ��-,   | Kartik          |
| Samar     | ֯�a�)��}!   | Samar           |
| Rohan     | HaS��e�gdr�E�   | Rohan           |
| Ishita    | �%�3����I�u��x  | Ishita          |
| Anushka   | ��I{�Q�UO,�э��   | Anushka         |
+-----------+-------------------+-----------------+--+



